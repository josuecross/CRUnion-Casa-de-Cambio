/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarea1.Visual;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import tarea1.Cliente;

/**
 *
 * @author josue
 */
public class ReportePorMonedas extends javax.swing.JFrame {
    File fileClientes;
    private MenuJframe menu;
    /**
     * Creates new form ReportePorCliente
     */
    public ReportePorMonedas() {
        initComponents();
        cargarArchivo();
    }
    
    private void cargarArchivo(){
        try {
            this.fileClientes = new File("TransaccionesRealizdas.txt");
            boolean flag = fileClientes.createNewFile();
            if (flag) {
                System.out.println("Se creo el archivo");
            }
            else {
                System.out.println("El archivo ya existe");
            }
        }
        catch(IOException e) {
            System.out.println("Exception Occurred:");
            e.printStackTrace();
        }
    }
    
    public Object[][] cargarModelo(String monedaOrigen, String monedaDestino){
        Object[][] transacciones = new String[0][3];
        String line;
        String idCliente = "";
        String montoOrigen = "";
        String montoDestino = "";
        try{
            Scanner input = new Scanner(this.fileClientes);
            //input.useDelimiter(",|$|\\n");
            
            while(input.hasNextLine()) {//Obtener del archivo los valores de cada dato separado por coma
                String[] tokens = input.nextLine().split(",");
                if(tokens[1].equals(monedaOrigen) && tokens[3].equals(monedaDestino)){
                    idCliente = tokens[0];
                    montoOrigen = tokens[2];
                    montoDestino = tokens[4];
                }
                
                
                Object newTransaccion[] = new Object[]{
                    idCliente, montoOrigen, montoDestino
                }; //Utilizado para guardar un nuevo cliente.
                
                //El nuevo cliente es pasado al modelo del jTable
                transacciones = addTransaccion(transacciones, newTransaccion);
            }
            
        }
        catch(FileNotFoundException e) {
            System.out.println("Exception Occurred:");
            e.printStackTrace();
        }  
        return transacciones;
    }
    
    private Object[][] addTransaccion(Object[][] transacciones, Object[] newTransaccion) {
        Object[][] newTransaccionesMatrix = new Object[transacciones.length + 1][5]; //Crea una nueva matriz para contener los datos que se agregan
        System.arraycopy(transacciones, 0, newTransaccionesMatrix, 0, transacciones.length);
        newTransaccionesMatrix[newTransaccionesMatrix.length - 1] = newTransaccion;

        return newTransaccionesMatrix;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monedaOrigenjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transaccionesClienteTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        monedaDestinojLabel1 = new javax.swing.JLabel();
        monedaOrigenComboBox = new javax.swing.JComboBox<>();
        monedaDestinoComboBox1 = new javax.swing.JComboBox<>();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        monedaOrigenjLabel.setText("Moneda origen");

        transaccionesClienteTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID cliente", "Monto Origen", "Monto Destino"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transaccionesClienteTable1);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        monedaDestinojLabel1.setText("Moneda destino");

        monedaOrigenComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        monedaDestinoComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(241, 241, 241)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(monedaOrigenjLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monedaOrigenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(monedaDestinojLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monedaDestinoComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {monedaDestinoComboBox1, monedaOrigenComboBox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monedaOrigenjLabel)
                            .addComponent(monedaOrigenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monedaDestinojLabel1)
                            .addComponent(monedaDestinoComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {monedaDestinoComboBox1, monedaOrigenComboBox});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        transaccionesClienteTable1.setModel(new javax.swing.table.DefaultTableModel(
                cargarModelo((String)monedaOrigenComboBox.getSelectedItem(), (String)monedaDestinoComboBox1.getSelectedItem() ),
        new String [] {
            "ID cliente", "Monto Origen", "Monto Destino"
        }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        int count = 0;
        ArrayList<String> modeloList = new ArrayList();
        for (String string : this.menu.getEquivalencia().getDescripcionesMonedas()) {
            if(string != "-Vacio-"){
                modeloList.add(string);
            }
        }
        String mostrarModelo[] = new String[modeloList.size()];
        mostrarModelo = modeloList.toArray(mostrarModelo);
        
        
        monedaOrigenComboBox.setModel(
                new javax.swing.DefaultComboBoxModel<>(
                        mostrarModelo
                )
        );   
        monedaDestinoComboBox1.setModel(
                new javax.swing.DefaultComboBoxModel<>(
                        mostrarModelo
                )
        );            // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> monedaDestinoComboBox1;
    private javax.swing.JLabel monedaDestinojLabel1;
    private javax.swing.JComboBox<String> monedaOrigenComboBox;
    private javax.swing.JLabel monedaOrigenjLabel;
    private javax.swing.JTable transaccionesClienteTable1;
    // End of variables declaration//GEN-END:variables

    /**
     * @param menu the menu to set
     */
    public void setMenu(MenuJframe menu) {
        this.menu = menu;
    }
}
