/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarea1.Visual;
import java.awt.Color;
import javax.swing.Popup;
import tarea1.Conversion_Nueva;
import tarea1.Equivalencias_Nuevas;

/**
 *
 * @author josue
 */
public class AgregarEditarMonedasJFrame extends javax.swing.JFrame {
    
    private Conversion_Nueva convercion;
    private Equivalencias_Nuevas equivalencia;
    private Popup popup;
    private MenuJframe menu;

    /**
     * Creates new form AgregarEditarMonedas
     */
    public AgregarEditarMonedasJFrame(Conversion_Nueva convercion, Equivalencias_Nuevas equivalencia) {
        initComponents();
        this.convercion = convercion;
        this.equivalencia = equivalencia;
    }
    
    public String[] getEquivalencias(){
        return this.equivalencia.getDescripcionesMonedas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nombrejTextField1 = new javax.swing.JTextField();
        precioComprajTextField2 = new javax.swing.JTextField();
        precioVentajTextField3 = new javax.swing.JTextField();
        agregarjButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        divisasjList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        precioComprajLabel6 = new javax.swing.JLabel();
        editarjButton = new javax.swing.JButton();
        PrecioVentajLabel7 = new javax.swing.JLabel();
        actulaizacionComprajTextField1 = new javax.swing.JTextField();
        actualizacionVentajTextField = new javax.swing.JTextField();
        MensajeInformacionEditarjLabel = new javax.swing.JLabel();
        mensajeInformacionAgregarjLabel = new javax.swing.JLabel();

        setTitle("Agregar o editar monedas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Monedas disponibles");

        nombrejTextField1.setToolTipText("");

        precioComprajTextField2.setToolTipText("precio");

        agregarjButton1.setText("Agregar");
        agregarjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarjButton1ActionPerformed(evt);
            }
        });

        divisasjList1.setToolTipText("");
        divisasjList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                divisasjList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(divisasjList1);

        jLabel2.setText("Nombre");

        jLabel3.setText("Precio de compra");

        jLabel4.setText("Precio de venta");

        jLabel5.setText("Agregar Nuevo");

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLayeredPane1.setAutoscrolls(true);

        precioComprajLabel6.setText("Precio de Compra: ");

        editarjButton.setText("Editar");
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });

        PrecioVentajLabel7.setText("Precio de Venta: ");

        jLayeredPane1.setLayer(precioComprajLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(editarjButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(PrecioVentajLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(actulaizacionComprajTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(actualizacionVentajTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(MensajeInformacionEditarjLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(editarjButton)
                        .addGap(60, 60, 60)
                        .addComponent(MensajeInformacionEditarjLabel))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PrecioVentajLabel7)
                            .addComponent(precioComprajLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(actulaizacionComprajTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(actualizacionVentajTextField))))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jLayeredPane1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {PrecioVentajLabel7, precioComprajLabel6});

        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(precioComprajLabel6)
                    .addComponent(actulaizacionComprajTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrecioVentajLabel7)
                    .addComponent(actualizacionVentajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editarjButton)
                    .addComponent(MensajeInformacionEditarjLabel))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombrejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precioComprajTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(agregarjButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mensajeInformacionAgregarjLabel)
                            .addComponent(precioVentajTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, nombrejTextField1, precioComprajTextField2, precioVentajTextField3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombrejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(precioComprajTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(precioVentajTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarjButton1)
                    .addComponent(mensajeInformacionAgregarjLabel))
                .addGap(18, 18, 18))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, nombrejTextField1, precioComprajTextField2, precioVentajTextField3});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        divisasjList1.clearSelection();
        //Actualiza la lista de monedas en la ventana
        divisasjList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = equivalencia.getDescripcionesMonedas();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }  
        });
        
    }//GEN-LAST:event_formWindowActivated
   
    //Agrega una nueva divisa al repertorio
    private void agregarjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarjButton1ActionPerformed
        divisasjList1.clearSelection(); 
        String nombre = nombrejTextField1.getText().toString();
        float precioVenta = 0;
        float precioCompra = 0;
        int accionATomar; // Variable que es usada para definir la accion que se tomara segun los datos ingresados
        try{//Manejo de excepcion si se ingresan datos no numericos
            precioCompra = Float.parseFloat(precioComprajTextField2.getText());
            precioVenta = Float.parseFloat(precioVentajTextField3.getText());
            if(precioCompra > 0 && precioVenta >0 && !nombre.equals("")) // Valida que los datos ingresados sean correctos.
                accionATomar = equivalencia.agregarNuevaEquivalencia(nombre, precioCompra, precioVenta);// acciones pertenecientes a la clase equivalencias
            else
                accionATomar = 3; //Accion si los datos no cumplen con las condiciones dadas
                        
        }
        catch(java.lang.NumberFormatException ex){
            accionATomar = 3; // Accion si no se ingresaron solo datos numericos
        }
        agregarMonedaNueva(accionATomar);
    }//GEN-LAST:event_agregarjButton1ActionPerformed
    
    //se obtiene la moneda seleccionada en la lista de divisas y se coloca el precio de compra
    //y venta en los espacios correspondientes a la derecha de la lista.
    private void divisasjList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_divisasjList1ValueChanged
        MensajeInformacionEditarjLabel.setText("");
        String divisaSeleccionada = "-Vacio-";
        float precioCompra;
        float precioVenta;
        
        try{
            divisaSeleccionada = divisasjList1.getSelectedValue().toString();
        }
        catch(java.lang.NullPointerException ex){
        }
        
        //Si se selecciona vacio en la lista de divisas se desactivan los campos para ingresar valores
        actulaizacionComprajTextField1.setEnabled(divisaSeleccionada.equals("-Vacio-")?false:true);
        actualizacionVentajTextField.setEnabled(divisaSeleccionada.equals("-Vacio-")?false:true);
        
        for(int i = 0; i < equivalencia.getDescripcionesMonedas().length; i++){
            if(divisaSeleccionada == equivalencia.getDescripcionesMonedas()[i]){
                precioCompra = equivalencia.getTablaConverciones()[i][0];
                precioVenta = equivalencia.getTablaConverciones()[i][1];
                actulaizacionComprajTextField1.setText(Float.toString(precioCompra));
                actualizacionVentajTextField.setText(Float.toString(precioVenta));
            }
        }
        MensajeInformacionEditarjLabel.setText("");
        
        // TODO add your handling code here:
    }//GEN-LAST:event_divisasjList1ValueChanged

//Actualiza la moneda seleccionada de la lista con los valores ingresados en las 
//jInput despues de precionar el boton editar
    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        MensajeInformacionEditarjLabel.setForeground(Color.RED);
        float precioCompra  = 0;
        float precioVenta = 0;
        try{ //manejo de excepciones sobre ingresar valores no numericos
            precioCompra = Float.parseFloat(actulaizacionComprajTextField1.getText());
            precioVenta = Float.parseFloat(actualizacionVentajTextField.getText()); 
        }
        catch(java.lang.NumberFormatException ex){
            MensajeInformacionEditarjLabel.setText("Error, verifica que ingresaste solo numeros");
            return;
        }
        try{//Manejo de exepcion al no seleccionar un valor en la lista de monedas disponibles para actualizar
            if(divisasjList1.getSelectedValue().equals("-Vacio-"))//Si la divisa esta vacia no se puede editar
                MensajeInformacionEditarjLabel.setText("No se puede editar");
            else if(precioCompra <= 0 || precioVenta <= 0)// si los montos ingresados son menores o iguales a 0 no se puede actualizar
                MensajeInformacionEditarjLabel.setText("Se debe ingresar montos mayores a 0"); 
            else{//Se edita la moneda y se agrega un mensaje de exito
                equivalencia.actualizarValoresEquivalencias(
                    divisasjList1.getSelectedValue(), 
                    precioCompra, 
                    precioVenta
                ); //Llama a la funcion para actualizar los valores  de la clase equivalencia;
                MensajeInformacionEditarjLabel.setForeground(Color.GREEN);
                MensajeInformacionEditarjLabel.setText("Éxito");
            }           
        }
        catch(java.lang.NullPointerException | java.lang.NumberFormatException ex){
            MensajeInformacionEditarjLabel.setText("Error, verifica que seleccionaste una moneda de la lista");
            return;
        }

// TODO add your handling code here:
    }//GEN-LAST:event_editarjButtonActionPerformed

    //Ejecuta la accion correcta dependiendo de los valores ingresados 
    //en los campos para agregrar una divisa. 
    void agregarMonedaNueva(int ejecutarAccion){
        mensajeInformacionAgregarjLabel.setForeground(Color.RED);
        switch(ejecutarAccion){
                case 0: //si la divisa a agregar ya existe
                    mensajeInformacionAgregarjLabel.setText("Ya existe la divisa que digito");
                break;
                case 1: // si se agrega una divisa que no existe y los datos y validaciones son correctos.
                    divisasjList1.setModel(new javax.swing.AbstractListModel<String>() {
                        String[] strings = equivalencia.getDescripcionesMonedas();
                        public int getSize() { return strings.length; }
                        public String getElementAt(int i) { return strings[i]; }  
                    });
                    nombrejTextField1.setText("");
                    precioComprajTextField2.setText("");
                    precioVentajTextField3.setText("");
                    mensajeInformacionAgregarjLabel.setForeground(Color.GREEN);
                    mensajeInformacionAgregarjLabel.setText("Éxito");
                break;
                case 2: // si no hay mas espacio para nuevas divisas
                    mensajeInformacionAgregarjLabel.setText("No hay mas espacios para agregar"); 
                break;
                case 3: // si los valores digitados no cumplen con las condiciones dadas
                    mensajeInformacionAgregarjLabel.setText("Revise que el nombre no este vacio y que los precios"
                        + " compra/venta sean correctos"); 
                break;
                
            }
        
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MensajeInformacionEditarjLabel;
    private javax.swing.JLabel PrecioVentajLabel7;
    private javax.swing.JTextField actualizacionVentajTextField;
    private javax.swing.JTextField actulaizacionComprajTextField1;
    private javax.swing.JButton agregarjButton1;
    private javax.swing.JList<String> divisasjList1;
    private javax.swing.JButton editarjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel mensajeInformacionAgregarjLabel;
    private javax.swing.JTextField nombrejTextField1;
    private javax.swing.JLabel precioComprajLabel6;
    private javax.swing.JTextField precioComprajTextField2;
    private javax.swing.JTextField precioVentajTextField3;
    // End of variables declaration//GEN-END:variables
}
